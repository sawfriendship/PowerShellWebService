stages:
  - test-config
  - test-scripts
  - test-wwwroot
  - test-build
  - prod-config
  - prod-scripts
  - prod-wwwroot
  - prod-build


job-test-config:
  stage: test-config
  tags: ["APP"]
  environment: production
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes:
        - appsettings.json
        - web.config
  script: |
    $config = Get-Content -Raw -Path "$pwd\.deploy_config.json" | ConvertFrom-Json

    $xml = [xml]::new()
    $xml.Load("$pwd\web.config")
    $xml.SelectSingleNode('/configuration/location[@path="."]/system.webServer/aspNetCore/environmentVariables/environmentVariable[@name="SQL_TABLE"]').SetAttribute('value',$env:SQL_TABLE)
    $xml.SelectSingleNode('/configuration/location[@path="."]/system.webServer/aspNetCore/environmentVariables/environmentVariable[@name="SQL_CONNECTION_STRING"]').SetAttribute('value',$env:SQL_CONNECTION_STRING)
    $xml.Save("$pwd\web.config")

    $config.test.servers | % {
      Copy-Item -Path "$pwd\appsettings.json" -Destination $_.path.remote -Recurse -Force
      Copy-Item -Path "$pwd\web.config" -Destination $_.path.remote -Recurse -Force
      Start-Sleep -second 5
      $_.url
      Invoke-RestMethod -Uri $_.url -SkipCertificateCheck -UseBasicParsing | ft
    }

job-prod-config:
  stage: prod-config
  tags: ["APP"]
  environment: production
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - appsettings.json
        - web.config
  script: |
    $config = Get-Content -Raw -Path "$pwd\.deploy_config.json" | ConvertFrom-Json

    $xml = [xml]::new()
    $xml.Load("$pwd\web.config")
    $xml.SelectSingleNode('/configuration/location[@path="."]/system.webServer/aspNetCore/environmentVariables/environmentVariable[@name="SQL_TABLE"]').SetAttribute('value',$env:SQL_TABLE)
    $xml.SelectSingleNode('/configuration/location[@path="."]/system.webServer/aspNetCore/environmentVariables/environmentVariable[@name="SQL_CONNECTION_STRING"]').SetAttribute('value',$env:SQL_CONNECTION_STRING)
    $xml.Save("$pwd\web.config")

    $config.prod.servers | % {
      Copy-Item -Path "$pwd\appsettings.json" -Destination $_.path.remote -Recurse -Force
      Copy-Item -Path "$pwd\web.config" -Destination $_.path.remote -Recurse -Force
      Start-Sleep -second 5
      $_.url
      Invoke-RestMethod -Uri $_.url -SkipCertificateCheck -UseBasicParsing | ft
    }

job-test-scripts:
  stage: test-scripts
  tags: ["APP"]
  environment: production
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes:
        - '.scripts/**'
  script: |
    $config = Get-Content -Raw -Path "$pwd\.deploy_config.json" | ConvertFrom-Json
    $config.test.servers | % {Copy-Item -Path "$pwd\.scripts" -Destination $_.path.remote -Recurse -Force}

job-prod-scripts:
  stage: prod-scripts
  tags: ["APP"]
  environment: production
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - '.scripts/**'
  script: |
    $config = Get-Content -Raw -Path "$pwd\.deploy_config.json" | ConvertFrom-Json
        $config.test.servers | % {Copy-Item -Path "$pwd\.scripts" -Destination $_.path.remote -Recurse -Force}
