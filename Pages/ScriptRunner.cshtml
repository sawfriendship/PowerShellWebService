@page
@model ScriptRunnerModel
@using System.Linq
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@{
    ViewData["Title"] = "TEST! ScriptRunner";
    bool IsDevelopment = Configuration.GetValue("IsDevelopment",false);
    var Query = Request.Query.ToDictionary(x => x.Key.ToString().ToLower(), x => x.Value.ToString());
    string PwShUrl = Configuration.GetValue("PwShUrl","api")!;
    bool IsAuthenticated = HttpContext.User.Identity.IsAuthenticated;
    bool SqlLoggingEnabled = Configuration.GetValue("SqlLogging:Enabled", false);
    string UserName = HttpContext.User.Identity!.Name ?? "%UserName%";
    // var UserRoles = getRoles(@Request.HttpContext);
}

@functions {
    public bool hasRole(HttpContext Context, string Role = "") {
        List<IConfigurationSection> Roles = Configuration.GetSection("Roles").GetChildren().Where(x => Role.Length == 0 || x.Key.ToLower() == Role.ToLower()).ToList();
        foreach (IConfigurationSection Role_ in Roles) {
            if (Configuration.GetSection(Role_.Path).GetChildren().Any(x => Context.User.IsInRole($"{x.Value}"))) {
                return true;
            };
        }
        return false;
    }
    public List<string> getRoles(HttpContext Context) {
        List<IConfigurationSection> Roles = Configuration.GetSection("Roles").GetChildren().ToList();
        List<string> Result = new();
        foreach (IConfigurationSection Role_ in Roles) {
            if (Configuration.GetSection(Role_.Path).GetChildren().Any(x => Context.User.IsInRole($"{x.Value}"))) {
                Result.Add(Role_.Key);
            };
        }
        return Result;
    }
}


<div id="conf" style="display:none;"><input name="PwShUrl" value="@PwShUrl"></div>

@if (!IsAuthenticated && !IsDevelopment) {
    <div class="text-center"><h3>Вы не авторизованы</h3></div>
} else if (!hasRole(HttpContext) && !IsDevelopment) {
    <div class="text-center"><h3>У вас нет прав на просмотр этой страницы</h3></div>
} else {
    if (IsDevelopment) {
        <div class="text-center text-danger"><h3>Включен режим разработки, права пользователей не учитываются!</h3></div>
    }

    <div id="Param" class="input-group input-group-sm" style="display:none">
        <select name="Type" class="form-select w-25 param_prop">
            <option value="String">String</option>
            <option value="Number">Number</option>
            <option value="Bool">Bool</option>
            <option value="Object">Object</option>
        </select>
        <input name="Property" type="text" aria-label="Name" placeholder="Name" class="form-control w-25 param_prop">
        <input name="Value" type="text" aria-label="Value" placeholder="Value" class="form-control w-25 param_prop">
        <button class="btn btn-outline-dark _btn_toggle_param" type="button"><i class="bi-toggle-on"></i></button>
        <button class="btn btn-outline-dark _btn_del_param" type="button"><i class="bi-trash3"></i></button>
    </div>

    <div class="row row-cols-2">
        <!-- LEFT -->
        <div id="LEFT" class="col-xs-12 col-sm-12 col-md-8 col-lg-4 col-xl-4 col-xxl-4" style="z-index:2">
            <form>
                <div class="input-group input-group-sm w-100">
                    <label for="_wrapper" class="form-label w-25">Wrapper</label>
                    <select id="_wrapper" name="_wrapper" class="form-select w-75"></select>

                    <label for="_script" class="form-label w-25">Script</label>
                    <select id="_script" name="_script" class="form-select w-75" disabled></select>
                </div>
            </form>
            <br>
            
            @if (hasRole(HttpContext,"Admin") || IsDevelopment)
            {
                <div class="input-group input-group-sm w-100">
                    <button type="button" class="_btn_reload btn btn-dark btn-outline-success w-50" >Reload Cache</button>
                    <button type="button" class="_btn_clear btn btn-dark btn-outline-danger w-50" >Clear Cache</button>
                </div>
            }
            <br>
            
            <div class="input-group input-group-sm w-100">
                <span>Params</span>
                <button type="button" class="_btn_add_param btn btn-outline-dark w-100">Add</button>
            </div>

            <div id="Params"></div>
        </div>
        <!-- RIGHT -->
        <div id="RIGHT" class="col-xs-12 col-sm-12 col-md-8 col-lg-8 col-xl-8 col-xxl-8" style="z-index:1">
            <div class="">
                <label for="_body" class="form-label">Body</label>
                <input id="_body" class="form-control bg-dark text-light" placeholder="Body">
                <a id="pwsh_url" target="_blank" href="/@PwShUrl/"></a>
                <br>
            </div>
            <div class="">

                <div id="SendParam" class="input-group input-group-sm">
                    <span class="input-group-text">maxDepth</span>
                    <input name="maxDepth" type="number" min="1" max="10" aria-label="Depth" placeholder="maxDepth" value="4" class="form-control _depth">
                    <span class="input-group-text">enumsAsStrings</span>
                    <input name="enumsAsStrings" type="number" min="0" max="1" aria-label="enumsAsStrings" placeholder="enumsAsStrings" value="1" class="form-control _enumsAsStrings">

                    <span class="input-group-text ">Section</span>
                    <select name="Section" class="form-select _outputtype">
                        <option value="All">All</option>
                        <option value="PSObjects">PSObjects</option>
                        <option value="Error">Error</option>
                        <option value="Warning">Warning</option>
                        <option value="Verbose">Verbose</option>
                        <option value="Information">Information</option>
                        <option value="Debug">Debug</option>
                    </select>
                    <button class="btn btn-outline-dark _btn_send" method="GET" type="button">GET</button>
                    <button class="btn btn-outline-dark _btn_send" method="POST" type="button">POST</button>
                    <button class="btn btn-outline-dark _btn_send" method="PATCH" type="button">PATCH</button>
                    <button class="btn btn-outline-dark _btn_send" method="PUT" type="button">PUT</button>
                    <button class="btn btn-outline-dark _btn_send" method="DELETE" type="button">DELETE</button>
                    <button class="btn btn-outline-dark _btn_send" method="DEBUG" type="button">DEBUG</button>
                </div>

                <br>
                <label for="_result" class="form-label">Result <span class="StatusCode"></span></label>
                <div id="Result" class="">
                    <textarea id="_result" class="form-control bg-dark text-light border border-4 rounded rounded-5" rows="20" placeholder="Result" readonly></textarea>
                    <span class="btn btn-outline-light _btn_copy"><i class="bi bi-clipboard"></i></span>
                </div>
            </div>
        </div>

    </div>

}

<div class="toast-container position-static"></div>

<script src="/wwwroot/js/ScriptRunner.js" asp-append-version="true"></script>
